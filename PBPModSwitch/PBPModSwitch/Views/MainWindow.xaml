<hc:Window x:Class="PBPModSwitch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PBPModSwitch"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:cv="clr-namespace:PBPModSwitch.Converters"
        xmlns:vm="clr-namespace:PBPModSwitch.ViewModels"
        xmlns:dw="clr-namespace:PBPModSwitch.Utils"
        mc:Ignorable="d"
        Title="PBP Mod Switch by Astropilot" Height="500" Width="800"
        Background="{DynamicResource SecondaryRegionBrush}"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
  <Window.DataContext>
    <vm:MainWindowViewModel/>
  </Window.DataContext>
  <Window.Resources>
    <ResourceDictionary>
      <cv:BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
      <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=OneTime}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="dw:VirtualToggleButton.IsVirtualToggleButton" Value="False" />
        <Setter Property="dw:VirtualToggleButton.IsChecked" Value="{Binding IsChecked}" />
      </Style>

      <HierarchicalDataTemplate 
        x:Key="CheckBoxItemTemplate"
        ItemsSource="{Binding Children, Mode=OneTime}"
        >
        <StackPanel Orientation="Horizontal" Focusable="False">
          <CheckBox
            Focusable="False" 
            IsChecked="{Binding IsChecked}" 
            VerticalAlignment="Center"
            />
          <ContentPresenter
            Focusable="False"
            Content="{Binding Name, Mode=OneTime}" 
            Margin="5,0" TextBlock.Foreground="#FF21ACAC" TextBlock.FontFamily="Montserrat SemiBold" VerticalAlignment="Center"
            />
        </StackPanel>
      </HierarchicalDataTemplate>
    </ResourceDictionary>
  </Window.Resources>
  <hc:Interaction.Triggers>
    <hc:EventTrigger EventName="Closing">
      <hc:InvokeCommandAction Command="{Binding Path=OnWindowClosingCommand}" />
    </hc:EventTrigger>
  </hc:Interaction.Triggers>
  <Grid>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="5"/>
        <RowDefinition Height="auto"/>
      </Grid.RowDefinitions>

      <Grid Grid.Column="0" Grid.Row="0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <hc:SimpleText Grid.Column="0" Grid.Row="0" Text="Penumbra Black Plague Mod Switch" Foreground="#FF21ACAC" FontFamily="Montserrat SemiBold" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,20,0,10"/>
        <Button Visibility="{Binding isModdedEnable, Converter={StaticResource BoolToVisConverter}, ConverterParameter='negate'}" Grid.Column="0" Grid.Row="1" Command="{Binding Path=ToggleModsCommand}" Style="{StaticResource ButtonSuccess}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="50" Content="Enable mods" FontFamily="Montserrat SemiBold" FontSize="32" Margin="0,10" />
        <Button Visibility="{Binding isModdedEnable, Converter={StaticResource BoolToVisConverter}}" Grid.Column="0" Grid.Row="1" Command="{Binding Path=ToggleModsCommand}" Style="{StaticResource ButtonDanger}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="50" Content="Disable mods" FontFamily="Montserrat SemiBold" FontSize="32" Margin="0,10,0,5" />
        <TreeView 
      x:Name="tree"
      Grid.Column="0" Grid.Row="2"
      ItemContainerStyle="{StaticResource TreeViewItemStyle}"
      ItemsSource="{Binding mapFiles}"
      ItemTemplate="{StaticResource CheckBoxItemTemplate}"
      />
      </Grid>

      <StatusBar Grid.Column="0" Grid.Row="2">
        <StatusBar.Items>
          <StatusBarItem Foreground="#FF21AC40" BorderBrush="#FF272727" Background="#2A2A2C" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
            <CheckBox
              IsHitTestVisible="False"
                Focusable="False"
            IsChecked="{Binding isModdedEnable}" 
            VerticalAlignment="Center"
            />
          </StatusBarItem>
          <StatusBarItem  BorderBrush="#FF272727" Background="#2A2A2C" Foreground="#FF21ACAC" FontFamily="Montserrat SemiBold" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
            <TextBlock Text="Fake game cache"/>
          </StatusBarItem>
          <StatusBarItem  BorderBrush="#FF272727" Background="#2A2A2C" Foreground="#FF21ACAC" FontFamily="Montserrat SemiBold" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right">
            <TextBlock>
              <Hyperlink NavigateUri="https://github.com/Astropilot/PBPModSwitch" RequestNavigate="Hyperlink_RequestNavigate">
                Github
              </Hyperlink>
            </TextBlock>
          </StatusBarItem>
        </StatusBar.Items>
      </StatusBar>

    </Grid>
    <Grid Visibility="{Binding waitingStatus.isWaiting, Converter={StaticResource BoolToVisConverter}}" Background="{DynamicResource SecondaryRegionBrush}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="5"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Foreground="White" FontSize="36" Text="{Binding Path=waitingStatus.waitingMessage}" TextWrapping="Wrap" TextAlignment="Center"></TextBlock>
      <ProgressBar Visibility="{Binding waitingStatus.showProgress, Converter={StaticResource BoolToVisConverter}}" Grid.Column="0" Grid.Row="2" Value="{Binding waitingStatus.progressValue}" Maximum="{Binding waitingStatus.progressMax}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="400"></ProgressBar>
    </Grid>
  </Grid>
</hc:Window>
